{%- if device.interfaces != None %}
######################################################################################
{#-		########################################################################   #}
{#-                           deletion of nmcli connections                        #}
{#-		########################################################################   #}
{%-		for interface in device.interfaces.all() %}
{%-			if interface.custom_field_data.get("auto_config", false)  %}
nmcli connection delete {{ interface.name }} > /dev/null 2>&1
{%-			endif %}
{%-		endfor %}
{%-		set interface_count = device.interfaces.all() | length -%}
{%-		for i in range(interface_count) %}
nmcli connection delete 'Wired connection {{ i }}' > /dev/null 2>&1
{%-		endfor %}
######################################################################################
{#-		########################################################################   #}
{#-                           adding bond interfaces                               #}
{#-		########################################################################   #}
{%-		for interface in device.interfaces.all() %}
{%-			if interface.custom_field_data.get("auto_config", false)  %}
{%-				if interface.type == "lag"  %}
{%-					set inter_type = "bond" %}
nmcli connection add type {{ inter_type }} con-name {{ interface.name }} ifname {{ interface.name }} 
nmcli connection modify {{ interface.name }} bond.options "mode=802.3ad,miimon=100"
nmcli connection modify {{ interface.name }} lacp-rate {{ "fast" if interface.custom_field_data.get("lacp_period") == "short" else "slow" }}
{%-					if interface.mac_addresses.all().first() != None %}
{%-						set mac_address = interface.mac_addresses.all().first() %}
{%-						if interface.mac_address != None  %}
{%-							set mac_address = interface.mac_address %}
{%-						endif  %}
nmcli connection modify {{ interface.name }} 802-3-ethernet.cloned-mac-address {{ mac_address }}
{%-					endif  %}
{%-					if interface.mtu != None  %}
nmcli connection modify {{ interface.name }} 802-3-ethernet.mtu {{ interface.mtu }}
{%-					endif  %}
{#-					configure ipv4/6 when set #}
{%-					for family in [4, 6] %}
{%-						if interface.ip_addresses.filter(address__family=family) %}
{%-							for ip in interface.ip_addresses.filter(address__family=family) %}
nmcli connection modify {{ interface.name }} ipv4.method manual ipv{{ family }}.address {{ ip.address }}
{%-							endfor %}
{%-						else  %}
nmcli connection modify {{ interface.name }} ipv{{ family }}.method disabled
{%-						endif  %}
{%-					endfor %}
{%-				endif  %}
{%-			endif %}
{%-		endfor %}
######################################################################################
{#-		######################################################################## #}
{#-                           adding vlan interfaces #}
{#-		######################################################################## #}
{%-		for interface in device.interfaces.all() %}
{%-			if interface.custom_field_data.get("auto_config", false)  %}
{%-				if interface.type == "virtual"  %}
{%-					set inter_type = "vlan" %}
nmcli connection add type {{ inter_type }} con-name {{ interface.name }} ifname {{ interface.name }} dev {{ interface.parent.name }} id {% for char in interface.name.split('.')[1] if char.isdigit() %}{{ char }}{% endfor %}
{#-                  configure ipv4/6 when set #}
{%-					for family in [4, 6] %}
{%-						if interface.ip_addresses.filter(address__family=family) %}
{%-							for ip in interface.ip_addresses.filter(address__family=family) %}
nmcli connection modify {{ interface.name }} ipv4.method manual ipv{{ family }}.address {{ ip.address }}
{%-							endfor %}
{%-						else  %}
nmcli connection modify {{ interface.name }} ipv{{ family }}.method disabled
{%-                      endif  %}
{%-					endfor %}
{%-				endif  %}
{%-			endif %}
{%-		endfor %}
######################################################################################
{#-		######################################################################## #}
{#-                           Ether interfaces #}
{#-		######################################################################## #}
{%-		for iface in device.interfaces.all() %}
{%-			if iface.custom_field_data.get("auto_config", false)  %}
{%-              if iface.type != "virtual" and iface.type != "bridge" and iface.type != "lag" %}
{%-              	set inter_type = "ethernet" %}
{%-              	if iface.lag == None %}
nmcli connection add type {{ inter_type }} con-name {{ iface.name }} ifname {{ iface.name }} 
{%-              	else %}
nmcli connection add type {{ inter_type }} con-name {{ iface.name }} ifname {{ iface.name }} master {{ iface.lag.name }}
{%-              	endif  %}

{%              	if iface.child_interfaces.all() != None %}
{#                      Clear IP config on eno1 (so it doesnâ€™t try to get an IP via DHCP or static): #}
nmcli connection modify {{ iface.name }} ipv4.method "disabled" ipv6.method "ignore"
nmcli connection up {{ iface.name }}
{%-              	else %}
nmcli connection modify {{ iface.name }} 802-3-ethernet.auto-negotiate no
{%-              	    if iface.speed != None  %}
nmcli connection modify {{ iface.name }} 802-3-ethernet.speed {{ (iface.speed / 1000) | int }}
{%-              	    endif  %}
{%-              	    if iface.duplex != None  %}
nmcli connection modify {{ iface.name }} 802-3-ethernet.duplex {{ iface.duplex}}
{%-              	    endif  %}
{%-              	    if iface.mtu != None  %}
nmcli connection modify {{ iface.name }} 802-3-ethernet.mtu {{ iface.mtu }}
{%-              	    endif  %}
{#-					    configure ipv4/6 when set #}
{%-					    for family in [4, 6] %}
{%-						    if iface.ip_addresses.filter(address__family=family) %}
{%-							    for ip in iface.ip_addresses.filter(address__family=family) %}
nmcli connection modify {{ iface.name }} ipv4.method manual ipv{{ family }}.address {{ ip.address }}
{%-							    endfor %}
{%-						    else  %}
nmcli connection modify {{ iface.name }} ipv{{ family }}.method disabled
{%-						    endif  %}
{%-					    endfor %}
{%-                 endif  %}
{%-			    endif %}
{%-			endif %}
{%-		endfor %}
######################################################################################
{%-	endif %}